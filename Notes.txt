Backend Setup:
===
$ cd backend
$ npm init -y
$ npm i express cors dotenv mongodb mongoose
$ npm i -D ts-node typescript nodemon @types/express @types/cors @types/node
$ npx tsc --init

Start the backend
$ npm run dev


Frontend Setup:
===
https://ui.shadcn.com/

Follow steps in docs - https://ui.shadcn.com/docs/installation -> Framework Vite
$ npm create vite@latest -> project name frontend -> framework React, TypeScript

$ cd frontend
$ npm install
Start the frontend
$ npm run dev

$ npm install -D tailwindcss postcss autoprefixer
$ npx tailwindcss init -p

$ npm i -D @types/node

$ npx shadcn-ui@latest init -> yes, New York, Slate, src/global.css, yes, blank, blank, blank, blank, no, Y
Configs saved in components.json

https://ui.shadcn.com/docs/components/
$ npx shadcn-ui@latest add button
Created in components/ui folder


Database Setup:
===
Create Database in https://cloud.mongodb.com/


React Router Setup:
===
$ npm i react-router-dom


rfcp, rfc
py-10 class for padding top and bottom


https://ui.shadcn.com/docs/components/sheet
$ npx shadcn-ui@latest add sheet
$ npm i lucide-react (for icons)
$ npx shadcn-ui@latest add separator

md:hidden is a Tailwind class name used to display for mobile screens
md:block for desktop screens

hover:text-orange-500 is a Tailwind class name used to apply a property to a html tag.

max-h-[600px] to set css property of Max Height to 600px.

-mt-16 to set margin top to -16px.

flex-col md:flex-row - It will be applying flex-col for mobile, flex-row for desktop view.


Auth0 Setup:
===
https://youtu.be/yufqeJLP1rI - Auth0 in 100 Seconds // And beyond with a Next.js Authentication Tutorial
https://auth0.com/ -> Applications -> mern-food-ordering-app-frontend, Sing Page Web Applications -> Settings -> Paste http://localhost:5173 in Allowed Callback/Logout/Web Origins -> Save

$ npm i @auth0/auth0-react


Authenticated user links:
$ npx shadcn-ui@latest add dropdown-menu


Test user creation API using Postman of VS Code extension Thunder Client.

$ npm i react-query

Auth0 Access Token is used verify the request to backend is done by logged in user only.


Validate Access Token at backend:
https://auth0.com/ -> Applications -> APIs -> Name, Identifier as mern-food-ordering-app-api -> Node.Js
middleware folder -> handle authentication or work on the request, we separate it from bussiness logic
$ npm i express-oauth2-jwt-bearer

Json Web Toekn gives tools to parse and decode the access token.
$ npm i jsonwebtoken
$ npm i -D @types/jsonwebtoken
